import copyfrom rdkit.Chem import Molfrom ChemEM.tools.rdtools import RDToolsclass Ligand(Mol):    '''    Class for representing a ChemEM ligand, inherits all methods from RDKit Mol object.    '''    def __init__(self, mol,                 name = None,                 chain = "",                 residue_number = 0,                 lig_id = None):        super().__init__(mol)        self.atoms  = []        self.residue_name = name        self.residue_number = residue_number        self.atoms = []        self.aromatic_rings = RDTools.get_aromatic_rings(self)        self.openff_structure = None        self.chain = chain        self.lig_id = lig_id        @property    def num_atoms(self):        return len(self.atoms)        @property     def torsion_lists(self):        return RDTools.get_torsion_lists(self)        def __repr__(self):                return f'Ligand(residue_name={ self.residue_name }, num_atoms={self.num_atoms})'            def __iter__(self):        yield from self.atoms            def copy(self):        return copy.deepcopy(self)                   