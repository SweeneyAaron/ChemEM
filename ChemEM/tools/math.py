# This file is part of the ChemEM software.## Copyright (c) 2023 - Topf Group & Leibniz Institute for Virology (LIV),# Hamburg, Germany.## This module was developed by:#   Aaron Sweeney    <aaron.sweeney AT cssb-hamburg.de>import numpy as npimport mathclass MathTools():           def calc_bond_angle(point1, point2, point3):        point1 = np.array(point1)        point2 = np.array(point2)        point3 = np.array(point3)        ba = point1 - point2        bc = point3 - point2        cosine_angle = np.dot(ba, bc) / \            (np.linalg.norm(ba) * np.linalg.norm(bc))        angle = np.arccos(cosine_angle)        return np.degrees(angle)        def euclidean_distance(a, b):        return np.sqrt(np.sum((np.array(a) - np.array(b)) ** 2))        def calc_centroid(points):       return np.array(np.mean(np.array(points), axis=0))        def get_plane_angle(plane1, plane2):        a1, b1, c1 = plane1[0], plane1[1], plane1[2]        a2, b2, c2 = plane2[0], plane2[1], plane2[2]        d = (a1 * a2 + b1 * b2 + c1 * c2)        e1 = math.sqrt(a1 * a1 + b1 * b1 + c1 * c1)        e2 = math.sqrt(a2 * a2 + b2 * b2 + c2 * c2)        d = d / (e1 * e2)        A = math.degrees(math.acos(d))        return A